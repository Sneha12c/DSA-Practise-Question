// The game involves repetitively eliminating the k-th friend from a circle, shrinking the size of the circle at every turn.
// This suggests that we can break down the problem into smaller, similar subproblems.
// From this process, there are two key observation:
// The problem, initially dealing with a circle of n friends, now reduces to a subproblem with n-1 friends
// In the new subproblem, friend indices shift by -k. For instance, friend 3 moves from index 3 to index 1 in the new circle.

//We observed that after the first turn/elimination, our problem reduces to a smaller subproblem of f(n−1,k).
// f(n,k)=(f(n−1,k)+k)modn

class Solution:
    def findTheWinner(self, n: int, k: int) -> int:
        def recursion(n , k):
            if n==1:
                return 0
            return (recursion(n-1 , k)+k)%n
        return recursion(n , k)+1

        

